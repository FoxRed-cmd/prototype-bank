# This is a basic workflow to help you get started with Actions

name: CI Test code coverage and Code quality

# Controls when the workflow will run
on:
    push:
        branches: ["main", "develop", "feature/devops"]
    pull_request:
        branches: ["main", "develop", "feature/devops"]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    # This workflow contains a single job called "build"
    build:
        # The type of runner that the job will run on
        runs-on: ubuntu-latest

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v4

            - name: Set up JDK 21
              uses: actions/setup-java@v4
              with:
                  distribution: temurin
                  java-version: 21
                  cache: maven

            - name: Build and test all services
              run: |
                  mvn -f calculator/pom.xml clean verify
                  mvn -f deal/pom.xml clean verify
                  mvn -f statement/pom.xml clean verify
                  mvn -f dossier/pom.xml clean verify
                  mvn -f gateway/pom.xml clean verify

            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v4
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  files: |
                      calculator/target/site/jacoco/jacoco.xml
                      deal/target/site/jacoco/jacoco.xml
                      statement/target/site/jacoco/jacoco.xml

            - name: SonarQube Scan
              env:
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
              run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=FoxRed-cmd_prototype-bank -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}
